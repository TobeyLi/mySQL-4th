1.为什么要进行排序？
	关系数据库设计理论认为：如果不明确规定排序顺序，则不应该假定检索出的数据的顺序有任何意义，为了明确的排序用SELECT语句检索出的数据，
	可以使用ORDER BY 子句取一个列或者多个列的名字，据此对输出进行排序。
	eg.	SELECT prod_name FROM Products ORDER BY prod_name;
	+---------------------+
	| prod_name           |
	+---------------------+
	| 12 inch teddy bear  |
	| 18 inch teddy bear  |
	| 8 inch teddy bear   |
	| Bird bean bag toy   |
	| Fish bean bag toy   |
	| King doll           |
	| Queen doll          |
	| Rabbit bean bag toy |
	| Raggedy Ann         |
	+---------------------+
	注意：使用ORDER BY 子句的时候，应该保证它是SELECT 语句中最后一条子句。
2.按多个列排序
	SELECT 列名1，列名2... FROM Products ORDER BY 列名1，列名2...;
	eg.	SELECT prod_id,prod_price,prod_name FROM Products ORDER BY prod_price,prod_name;
	+---------+------------+---------------------+
	| prod_id | prod_price | prod_name           |
	+---------+------------+---------------------+
	| BNBG02  |       3.49 | Bird bean bag toy   |
	| BNBG01  |       3.49 | Fish bean bag toy   |
	| BNBG03  |       3.49 | Rabbit bean bag toy |
	| RGAN01  |       4.99 | Raggedy Ann         |
	| BR01    |       5.99 | 8 inch teddy bear   |
	| BR02    |       8.99 | 12 inch teddy bear  |
	| RYL01   |       9.49 | King doll           |
	| RYL02   |       9.49 | Queen doll          |
	| BR03    |      11.99 | 18 inch teddy bear  |
	+---------+------------+---------------------+
	说明：重点是理解在按多个列排序的时候，排序的顺序完全按规定进行，即对于上述的例子的输出中，仅在多个行具有相同的prod_price时才会对
	产品按prod_name进行排序。若prod_price 列中所有的值都是唯一的，则不会按prod_name排序。
	
	这个表达语句的另外一种方式是：SELECT prod_id,prod_price,prod_name FROM Products ORDER BY 2,3;
	这条语句的意思是：SELECT清单中（即prod_id,prod_price,prod_name）指定的是选择列的相对位置而不是列名。
	ORDER BY 2,3; —->表示先按prod_price,再按prod_name 进行排序。
	注意事项：当数据不出现在SELECT清单中的列进行排序时，不能采用这项技术。

3.指定排序方向（升序还是降序）
	由于在MySQL里面默认的是升序排列（ASC），所以一般的情况都不用加ASC修饰。若要指定排序方向，也就是降序，那么就需要使用DESC关键字
	SELECT 列名1，列名2... FROM Products ORDER BY 列名1 DESC;
	eg.	SELECT prod_id,prod_price,prod_name FROM Products ORDER BY prod_price DESC,prod_name;
	+---------+------------+---------------------+
	| prod_id | prod_price | prod_name           |
	+---------+------------+---------------------+
	| BR03    |      11.99 | 18 inch teddy bear  |
	| RYL01   |       9.49 | King doll           |
	| RYL02   |       9.49 | Queen doll          |
	| BR02    |       8.99 | 12 inch teddy bear  |
	| BR01    |       5.99 | 8 inch teddy bear   |
	| RGAN01  |       4.99 | Raggedy Ann         |
	| BNBG02  |       3.49 | Bird bean bag toy   |
	| BNBG01  |       3.49 | Fish bean bag toy   |
	| BNBG03  |       3.49 | Rabbit bean bag toy |
	+---------+------------+---------------------+
	说明：DESC关键字只应用到直接位于其前面的列名，在上例中，只对prod_price 列指定DESC，对prod_name列不指定，即prod_price 列是以降序的顺序排列的，而
	prod_name列（在每个价格内）仍然是按标准的升序排序
	SELECT prod_id,prod_price,prod_name FROM Products ORDER BY prod_price DESC,prod_name DESC;
	+---------+------------+---------------------+
	| prod_id | prod_price | prod_name           |
	+---------+------------+---------------------+
	| BR03    |      11.99 | 18 inch teddy bear  |
	| RYL02   |       9.49 | Queen doll          |
	| RYL01   |       9.49 | King doll           |
	| BR02    |       8.99 | 12 inch teddy bear  |
	| BR01    |       5.99 | 8 inch teddy bear   |
	| RGAN01  |       4.99 | Raggedy Ann         |
	| BNBG03  |       3.49 | Rabbit bean bag toy |
	| BNBG01  |       3.49 | Fish bean bag toy   |
	| BNBG02  |       3.49 | Bird bean bag toy   |
	+---------+------------+---------------------+